<test>
    <name>SecretMMS.TC.028</name>
    <description>For Secret MMS Message Application should charged only Sender and generate CDR for billing 
	Test Category: MUST
Test Steps:
---------------------------------------------------------------
1. Send MM1 message  to MMS Proxy
2. MMS Proxy should intercept this message and send to Application as HTTP GET Request
3. MMS Extra after validating the user sends a positive response and asks for "send data" to MMS Proxy server.
4. MMS Proxy then sends HTTP post to application.
5. Sender credit balace has been checked, if the sender has balance then the request get forwarded.
6. Application will send MM7_submit.REQ to MMSC
---------------------------------------------------------------
<!--  Modules Used:
	  1. MMSC
	  3. SMSC
	  4. Diameter
	TODO:
	1. Allocate the Users with all required services and with valid password
	2. How to check if CDRs has been created after charging -->
	</description>

	<!-- Delete Message Store -->
	<subtest>../deleteMessageStoreAll.xml</subtest> 

	<!-- Available MSISDN -->
	<configuration>../subscriber_config.xml</configuration>

		<!-- Start SMSC Server -->
	<function name="startSMSCServer" module="SMS"/>
	<function name="waitForBind" module="SMS"/>

	<!-- Query the name of the active MEDIA-STORE process -->
	<function name="activeProcessToVar" module="Remote">
		<parameter>MESSAGE-STORE</parameter>
		<parameter>Message_Store_Process_Name</parameter>
	</function>

	<!-- Set mandatory headers for request -->
	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Region</parameter>
		<parameter>Siberia</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Session-Id</parameter>
		<parameter>987655</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-MMS-Message-Type</parameter>
		<parameter>m-send-req</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>To</parameter>
		<configuration>MMSX/SECRET/RECIPIENT/MSISDN3</configuration>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Subscriber-MSISDN</parameter>
		<configuration>MMSX/SECRET/SENDER/MSISDN1</configuration>
	</function>

	<!-- Set subject with Express message symbol ! -->
	<function name="setHeader" module="HTTP">
		<parameter>Subject</parameter>
		<parameter>#Test case to check the charging done to Sender only and chehck CDRs Secret TC.028</parameter>
	</function>

	<!-- Send Metadeta Request -->
	<function name="sendGetRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/New-Message-Intercepted</parameter>
		</parameter>
	</function>

	<!-- Check response back from application -->
	<function name="checkResponseCode" module="HTTP">
		<parameter>200</parameter>
	</function>

	<!-- Will get response as New-Message-Intercepted-Response where need to validate X-Proxy-Handle as "send-body" and set X-Application-Context-Id as TransactionID -->
	<function name="queryText" module="BASIC">
		<variable>HTTP/HEADER/X-Application-Context-Id</variable>
		<parameter>TransactionID</parameter>
		<parameter>(.*)</parameter>
	</function>

	<function name="info" module="Basic">
		<parameter>TransactionID=</parameter>
		<variable>TransactionID</variable>
	</function>

	<function name="checkHeader" module="HTTP">
		<parameter>X-Proxy-Handle</parameter>
		<parameter>send-body</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Region</parameter>
		<parameter>Siberia</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Application-Context-Id</parameter>
		<variable>TransactionID</variable>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>Content-Length</parameter>
		<base64bytelength><file>mm7req.txt</file></base64bytelength>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>To</parameter>
		<configuration>MMSX/SECRET/RECIPIENT/MSISDN3</configuration>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Subscriber-MSISDN</parameter>
		<configuration>MMSX/SECRET/SENDER/MSISDN3</configuration>
	</function>

	<function name="setPostData" module="HTTP">
		<file>mm7req.txt</file>
		<parameter/>
	</function>

	<!-- Send Body to application-->
	<function name="sendPostRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/Message-Body</parameter>
		</parameter>
	</function>
	
	<!-- Send Charge credit request -->

	<!-- Check for response from Diameter server -->

	<!-- wait for 1 WSP sms message -->
	<function name="waitForWSPMessages" module="SMS">
		<parameter>1</parameter>
	</function> 
	

<function name="getServerConnection" module="SMPP">
         <parameter>MMSX</parameter>
		<parameter>0</parameter>
    </function> 

        <function name="sleep" module="basic">
            <parameter>12000</parameter>
        </function>

	<function name="sendSMPPPacket" module="SMPP">
		<parameter>MMSX</parameter>
		<parameter>SUBMIT_SM</parameter>
		<parameter>internal</parameter>
		<parameter>STYP</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<configuration>MMSX/SECRET/RECIPIENT/MSISDN3</configuration>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<configuration>MMSX/SHORTCODE/MSISDN1</configuration>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter></parameter>
		<parameter></parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>123456</parameter>
</function>

        <function name="sleep" module="basic">
            <parameter>6000</parameter>
        </function>

	<!-- Check for MMS message stored in Message Store-->
	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>
			<parameter>run command amocli -k count TI:F.CEE.</parameter>
			<variable>Message_Store_Process_Name</variable>
			<parameter>:AMO</parameter>
		</parameter>
	</function>

	<function name="queryResponse" module="Remote">
		<parameter>amocli: 1 items counted</parameter>
		<parameter>response</parameter>
	</function>
<!-- How to check the CDRs for charging done to Sender. -->

<!-- Stop SMSC Server -->
	<function name="stopSMSCServer" module="SMS"/> 
</test>