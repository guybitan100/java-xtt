<test>
    <name>SecretMMS.TC.034</name>
    <description>Validate MMS message retry when recipient try to retrieves the MMS message / Application send message to MMSC and MMSC is down/ message should retry for a configurable number and amount of time
Test Category: MUST
Test Steps:
---------------------------------------------------------------
	1. Notification regarding MMS message has been sent successfully towards recipient.
	2. Recipient sends an SMS regarding retrieval of MMS message.
	3. Application send an MM7 submit to an MMSC
	5. Validate retry when an MMSC is down for a particular amount and number of time
---------------------------------------------------------------
<!--  Modules Used:
	  1. MMSC
	  2. HTTP
	  3. SMSC
	  4. Diameter
		TODO:
	1. Allocate the Users with all required services and with valid password
	2. Find how to receive SMS for recepient and how to reply to that SMS with passoword as a containt
	3. How to stop MMSC intermetently so APP can re-send the MMS to recipient-->
</description>

	<!-- Available MSISDN -->
	<configuration>../subscriber_config.xml</configuration>

<function name="activeProcessToVar" module="Remote">
		<parameter>MM7-VASP-OUT</parameter>
		<parameter>MM7-VASP-OUT</parameter>
	</function>

	<!-- Restart process to get latest process log -->
	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>
			<parameter>restart process </parameter>
			<variable>MM7-VASP-OUT/0</variable>
		</parameter>
	</function>

	<!--  Back up of default workflow constant file -->
 	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>
			<parameter>extract data </parameter>
			<parameter>workflowconstants default_workflowconstants.xml</parameter>
		</parameter>
	</function>

	<!--  Read the workflow constants in a variable from the Backed Up workflow constant file -->
 	<function name="readRemoteFile" module="Remote">
		<parameter>default_workflowconstants.xml</parameter>
		<parameter>test_workflowconstants</parameter>
	</function> 

	<!--  Replace the Value of the constant "mm7VaspOutNumberOfRetries" in the variable specific to the test -->
	<function name="replace" module="Basic">
		<parameter>test_workflowconstants</parameter>
		<parameter>&lt;workflowConstant name="mm7VaspOutNumberOfRetries"&gt;(\d++)&lt;/workflowConstant&gt;</parameter>
		<parameter>&lt;workflowConstant name="mm7VaspOutNumberOfRetries"&gt;2&lt;/workflowConstant&gt;</parameter>
	</function>

	<!-- Write a remote file with the chaged values in the variable -->
	<function name="writeRemoteFile" module="Remote">
		<parameter>loadworkflowconstants.xml</parameter>
		<variable>test_workflowconstants</variable>
	</function>

	<!-- Load the updated workflow file specific to the test -->
	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>load data loadworkflowconstants.xml</parameter>
	</function>

	<!-- Check for the success of the loading  -->
	<function name="queryResponse" module="Remote">
		<parameter>Loaded workflowconstants</parameter>
		<parameter>dev/null</parameter>
	</function>

	<!-- Start SMSC Server -->
	<function name="startSMSCServer" module="SMS"/>
	<function name="waitForBind" module="SMS"/>

	<!-- For retry test no need to start MMSC server. -->
	<!-- <function name="startMMSCServer" module="MMSC"/> -->

	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>enable trac -v WPE MM7-VASP-OUT.*</parameter>
	</function>

	<!-- Delete Existing messages from Message Store -->
	<subtest>../deleteMessageStoreAll.xml</subtest>

	<!-- Query the name of the active MESSAGE-STORE process -->
	<function name="activeProcessToVar" module="Remote">
		<parameter>MESSAGE-STORE</parameter>
		<parameter>Message_Store_Process_Name</parameter>
	</function>

	<!-- Set mandatory headers for request -->
	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Region</parameter>
		<parameter>Siberia</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Session-Id</parameter>
		<parameter>987655</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-MMS-Message-Type</parameter>
		<parameter>m-send-req</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>To</parameter>
		<configuration>MMSX/SECRET/RECIPIENT/MSISDN3</configuration>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Subscriber-MSISDN</parameter>
		<configuration>MMSX/SECRET/SENDER/MSISDN1</configuration>
	</function>

	<!-- Set subject with Secret message symbol # -->
	<function name="setHeader" module="HTTP">
		<parameter>Subject</parameter>
		<parameter>#Test case to check MMS message retry Secret TC.034</parameter>
	</function>

	<!-- Send Metadeta Request -->
	<function name="sendGetRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/New-Message-Intercepted</parameter>
		</parameter>
	</function>

	<!-- Check response back from application -->
	<function name="checkResponseCode" module="HTTP">
		<parameter>200</parameter>
	</function>

		<!-- Will get response as a New-Message-Intercepted-Response where need to validate X-Proxy-Handle as "send-body" and set X-Application-Context-Id as TransactionID -->
	<function name="checkHeader" module="HTTP">
		<parameter>X-Proxy-Handle</parameter>
		<parameter>send-body</parameter>
	</function>

	<function name="queryText" module="BASIC">
		<variable>HTTP/HEADER/X-Application-Context-Id</variable>
		<parameter>TransactionID</parameter>
		<parameter>(.*)</parameter>
	</function>

	<function name="info" module="Basic">
		<parameter>TransactionID=</parameter>
		<variable>TransactionID</variable>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Application-Context-Id</parameter>
		<variable>TransactionID</variable>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>Content-Type</parameter>
		<parameter>text/xml; charset="utf-8"; boundary="NextPart_000_0028_01C19839.84698430"</parameter>
	</function>


	<function name="setPostData" module="HTTP">
		<file>mm7req.txt</file>
		<parameter/>
	</function>

	<!-- Send Body to application -->
	<function name="sendPostRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/Message-Body</parameter>
		</parameter>
	</function>

	<!-- Validate "discard" response from Application to MMS proxy server -->
	<function name="checkHeader" module="HTTP">
		<parameter>X-Proxy-Handle</parameter>
		<parameter>discard</parameter>
	</function>

	<!-- wait for 1 WSP sms message -->
	<function name="waitForWSPMessages" module="SMS">
		<parameter>1</parameter>
	</function> 

	<function name="getServerConnection" module="SMPP">
         <parameter>MMSX</parameter>
		<parameter>0</parameter>
    </function> 

	<function name="sendSMPPPacket" module="SMPP">
		<parameter>MMSX</parameter>
		<parameter>DELIVER_SM</parameter>
		<parameter>internal</parameter>
		<parameter>1</parameter>
		<parameter>0</parameter>
		<parameter>1</parameter>
		<configuration>MMSX/SECRET/RECIPIENT/MSISDN3</configuration>
		<parameter>0</parameter>
		<parameter>1</parameter>
		<configuration>MMSX/SHORTCODE/MSISDN1</configuration>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter></parameter>
		<parameter></parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>123456</parameter>
	</function>

	<!-- Check for MMS message stored in Message Store-->
	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>
			<parameter>run command amocli -k count TI:F.CEE.</parameter>
			<variable>Message_Store_Process_Name</variable>
			<parameter>:AMO</parameter>
		</parameter>
	</function>

	<function name="queryResponse" module="Remote">
		<parameter>amocli: 1 items counted</parameter>
		<parameter>response</parameter>
	</function>
	<!-- Sleep to complete all 2 retries as specified in workflow constants file -->
	<function name="sleep" module="Basic">
		<parameter>25000</parameter>
	</function>

	<function name="executeRemoteCommand" module="Remote">
		<parameter>
			<parameter>/bin/grep cfgMm7VaspOutNumberOfRetries </parameter>
			<configuration>remote/procpath</configuration>
			<parameter>/</parameter>
			<variable>MM7-VASP-OUT/0</variable>
			<parameter>/</parameter>
			<variable>MM7-VASP-OUT/0</variable>
			<parameter>.out</parameter>
		</parameter>
	</function>

	<!-- Check MMSX Application total number of retries -->
	<function name="queryResponse" module="Remote">
		<parameter> cfgMm7VaspOutNumberOfRetries = 2</parameter>
		<parameter>dev/null</parameter>
	</function>

	<!-- After first retry, value should become as 1 -->
	<function name="queryResponse" module="Remote">
		<parameter> cfgMm7VaspOutNumberOfRetries = 1</parameter>
		<parameter>dev/null</parameter>
	</function>

	<!-- At final, value should be 0 -->
	<function name="queryResponse" module="Remote">
		<parameter> cfgMm7VaspOutNumberOfRetries = 0</parameter>
		<parameter>dev/null</parameter>
	</function>

	<function name="executeRemoteCommand" module="Remote">
		<parameter>
			<parameter>/bin/grep cfgMm7VaspOutRetryIntervalSecs </parameter>
			<configuration>remote/procpath</configuration>
			<parameter>/</parameter>
			<variable>MM7-VASP-OUT/0</variable>
			<parameter>/</parameter>
			<variable>MM7-VASP-OUT/0</variable>
			<parameter>.out</parameter>
		</parameter>
	</function>

	<!-- Check MMSX Application RetryIntervalSecs, it should be 10 as per default workflow file -->
	<function name="queryResponse" module="Remote">
		<parameter> cfgMm7VaspOutRetryIntervalSecs = 10</parameter>
		<parameter>dev/null</parameter>
	</function>

	<!-- Check for MMS message stored in Message Store-->
	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>
			<parameter>run command amocli -k count TI:F.CEE.</parameter>
			<variable>Message_Store_Process_Name</variable>
			<parameter>:AMO</parameter>
		</parameter>
	</function>

	<function name="queryResponse" module="Remote">
		<parameter>amocli: 0 items counted</parameter>
		<parameter>response</parameter>
	</function>

	<!-- Load the default workflow to undo the workflow constants changes done specific to the test -->
	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>load data default_workflowconstants.xml</parameter>
	</function>

	<function name="queryResponse" module="Remote">
		<parameter>Loaded workflowconstants</parameter>
		<parameter>dev/null</parameter>
	</function>

	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>disable trac -v </parameter>
	</function>

	<!-- Stop MMSC Server -->
	<!-- <function name="stopMMSCServer" module="MMSC"/> -->

	<!-- Stop SMSC Server -->
	<function name="stopSMSCServer" module="SMS"/>
</test>