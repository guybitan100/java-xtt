<test>
    <name>SecretMMS.TC.023</name>
    <description>Validate "Secret MMS" Use Case does function when Sender is in DB &amp; Recipient is not in DB &amp; Sender has "Secret MMS" feature enabled &amp; Sender has already defined a proper Recipient password
Test Category: MUST	
Test Steps:
---------------------------------------------------------------
1. Sender is provision in application
2. Recipient is not provision in application
3. Sender has "Secret MMS" feature enable and sends intercepted message through MMS Proxy via MM1.
4. Application identifies this MMS as Secret and sends "Send Body" in response.
5. Body has been sent through HTTP-POST request.
6. Application sends the charging request to Billing application and gets the OK response.
7. Application saves that MMS within the persistent storage.
8. Application sends the discard message to MMS proxy
9. Application sends secret request through SMS message to Recipient.	
---------------------------------------------------------------
</description>
<!--  Modules Used:
	  1. MMSC
	  2. HTTP
	  3. SMSC
	  4. Diameter
	TODO:-->

<!-- Settiing a password for a recipient who is not added in database -->
	 <function name="executeRemoteXMSCommand" module="Remote">
		<parameter>run command querier -y 1 -x 0 -o MMSX -p  F.CEE.DB-ACCESS -m com.mobilgw.intf.uds.mor.Mmsx.setPassword subscriberId=7001  msisdn=0891119314 password=123456</parameter>
	</function>

	<function name="checkReturnCode" module="Remote">
		<parameter>0</parameter>
	</function>

	<!-- Delete Message Store -->
	<subtest>../deleteMessageStoreAll.xml</subtest> 

	<!-- Available MSISDN -->
	<configuration>../subscriber_config.xml</configuration>

	<!-- Start SMSC Server -->
	<function name="startSMSCServer" module="SMS"/>
	<function name="waitForBind" module="SMS"/>

	<!-- Start MMSC Server -->
	<function name="startMMSCServer" module="MMSC"/>

	<!-- Query the name of the active MESSAGE-STORE process -->
	<function name="activeProcessToVar" module="Remote">
		<parameter>MESSAGE-STORE</parameter>
		<parameter>Message_Store_Process_Name</parameter>
	</function>

	<!-- Set mandatory headers for request -->
	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Region</parameter>
		<parameter>Siberia</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Session-Id</parameter>
		<parameter>987655</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-MMS-Message-Type</parameter>
		<parameter>m-send-req</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>To</parameter>
		<configuration>MMSX/NOTINDB/RECIPIENT/MSISDN45</configuration>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Subscriber-MSISDN</parameter>
		<configuration>MMSX/SECRET/SENDER/MSISDN1</configuration>
	</function>

	<!-- Set subject with Secret message symbol # -->
	<function name="setHeader" module="HTTP">
		<parameter>Subject</parameter>
		<parameter>#To Test for recipient is not in DB Secret TC.023</parameter>
	</function>

	<!-- Send Metadeta Request -->
	<function name="sendGetRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/New-Message-Intercepted</parameter>
		</parameter>
	</function>

	<!-- Check response back from application -->
	<function name="checkResponseCode" module="HTTP">
		<parameter>200</parameter>
	</function>

	<!-- Will get response as New-Message-Intercepted-Response where need to validate X-Proxy-Handle as "send-body" and set X-Application-Context-Id as TransactionID -->
	<function name="queryText" module="BASIC">
		<variable>HTTP/HEADER/X-Application-Context-Id</variable>
		<parameter>TransactionID</parameter>
		<parameter>(.*)</parameter>
	</function>

	<function name="info" module="Basic">
		<parameter>TransactionID=</parameter>
		<variable>TransactionID</variable>
	</function>

	<function name="checkHeader" module="HTTP">
		<parameter>X-Proxy-Handle</parameter>
		<parameter>send-body</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Region</parameter>
		<parameter>Siberia</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Application-Context-Id</parameter>
		<variable>TransactionID</variable>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>Content-Type</parameter>
		<parameter>text/xml; charset="utf-8"; boundary="NextPart_000_0028_01C19839.84698430"</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>To</parameter>
		<configuration>MMSX/NOTINDB/RECIPIENT/MSISDN45</configuration>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Subscriber-MSISDN</parameter>
		<configuration>MMSX/SECRET/SENDER/MSISDN1</configuration>
	</function>

	<function name="setPostData" module="HTTP">
		<file>mm7req.txt</file>
		<parameter/>
	</function>

	<!-- Send Body to application-->
	<function name="sendPostRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/Message-Body</parameter>
		</parameter>
	</function>
<!-- Send Charge credit request -->

<!-- Check for response from Diameter server -->

	<!-- wait for 1 WSP sms message -->
	<function name="waitForWSPMessages" module="SMS">
		<parameter>1</parameter>
	</function> 

<!-- Saving Server connection for future SMS communication -->
<function name="getServerConnection" module="SMPP">
         <parameter>MMSX</parameter>
		<parameter>0</parameter>
    </function> 

<!-- Building MO for sending Secret Password to MMSX from recipient -->
	<function name="sendSMPPPacket" module="SMPP">
		<parameter>MMSX</parameter>
		<parameter>DELIVER_SM</parameter>
		<parameter>internal</parameter>
		<parameter>1</parameter>
		<parameter>0</parameter>
		<parameter>1</parameter>
		<configuration>MMSX/NOTINDB/RECIPIENT/MSISDN45</configuration>
		<parameter>0</parameter>
		<parameter>1</parameter>
		<configuration>MMSX/SHORTCODE/MSISDN1</configuration>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter></parameter>
		<parameter></parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>123456</parameter>
	</function>

<!-- Waiting for the SMS response from MSMX -->
	<function name="waitForRequests" module="MMSC">
		<parameter>1</parameter>
	</function>

<!-- It's a good Idea to check whether the response is actually a correct MM7 request by validating against the standards -->
	<function name="validateXML" module="XML">
		<variable>MMSCSERVER/MM7/SOAP</variable>
		<parameter></parameter>
		<configuration>MMSCSERVER/XMLNSENV</configuration>
		<configuration>MMSCSERVER/SOAPXSD</configuration>
		<configuration>MMSCSERVER/XMLNSMM7</configuration>
		<configuration>MMSCSERVER/MM7XSD</configuration>
	</function>

	<!-- check MM7 version set correctly in response -->
	<function name="queryText" module="Basic">
		<variable>MMSCSERVER/MM7/SOAP</variable>
		<parameter>dev/null</parameter>
		<parameter>
			<parameter>&lt;MM7Version&gt;5.6.0&lt;/MM7Version&gt;</parameter>
		</parameter>
	</function>

	<!-- Check Secret Subject -->
	<function name="queryText" module="Basic">
		<variable>MMSCSERVER/MM7/SOAP</variable>
		<parameter>dev/null</parameter>
		<parameter>
			<parameter>&lt;Subject&gt;\{MMSX:F</parameter>
			<configuration>MMSX/SECRET/SENDER/MSISDN1</configuration>
			<parameter>\}To Test for recipient is not in DB Secret TC.023&lt;/Subject&gt;</parameter>
		</parameter>
	</function>


	<!-- Check for MMS message stored in Message Store-->
	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>
			<parameter>run command amocli -k count TI:F.CEE.</parameter>
			<variable>Message_Store_Process_Name</variable>
			<parameter>:AMO</parameter>
		</parameter>
	</function>

	<function name="queryResponse" module="Remote">
		<parameter>amocli: 0 items counted</parameter>
		<parameter>response</parameter>
	</function>

	<function name="sleep" module="basic">
            <parameter>1000</parameter>
        </function>
	
<!-- Deleting recipient password-->
	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>run command querier -y 1 -x 0 -o MMSX -p  F.CEE.DB-ACCESS -m com.mobilgw.intf.uds.mor.Mmsx.deletePassword subscriberId=7001 msisdn=0891119314</parameter>
	</function>

	<function name="checkReturnCode" module="Remote">
		<parameter>0</parameter>
	</function>

<!-- Stop SMSC/MMSC Server -->
	<function name="stopSMSCServer" module="SMS"/>
	<function name="stopMMSCServer" module="MMSC"/> 
	</test>