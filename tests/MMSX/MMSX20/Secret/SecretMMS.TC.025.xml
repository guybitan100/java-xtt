<test>
    <name>SecretMMS.TC.025</name>
    <description>Validate Secret MMS Use Case (Delivery/Read Report is Requested) / Via secure HTTP-IN Application receives MM1 Message with "application/vnd.wap.multipart.related" Content-Type (200 Kbytes) (mms.smil + text/plain + images + sounds + videos in multiple slides) / Application sends MM via MM7-OUT
Test Category: MUST
Test Steps:
---------------------------------------------------------------
1. Login subscriber web/wap portal.
2. Sender and Recipient are provision in application.
3. Sender has "Secret MMS" feature enable and sends intercepted message through MMS Proxy via MM1 with Content-Type "application/vnd.wap.multipart.related" and requesting Delivery/ Read report to MMS Proxy.
4. Application identifies this MMS as Secret and sends "Send Body" in response.
5. Body has been sent through HTTP-POST request.
6. Application sends the charging request to Billing application and gets the OK response.
7. Application saves that MMS within the persistent storage.
8. Application sends the discard message to MMS proxy
9. Application sends secret request through SMS message to Recipient.
10. Sender then sends a password for that message to the application.
11. MMS message is being retrieved and send it through MM7 Submit to the target MMSC.
12. MMSC then sends DR and RR to the Application and application in turn sends a respective DR and RR to the sender.	
---------------------------------------------------------------
<!--  Modules Used:
	  1. MMSC
	  2. 2 WebServer, for Sender another for Recepient to receive the MMS
	  3. SMSC
	  4. Diameter
	TODO:
	1. Start the Secure web server and findout how to send the HHTP request on https
	2. Find how to receive SMS for recepient and how to reply to that SMS with passoword as a containt
	3. Findout how to send Mulipart Message
	4. Findout how to send and receive the DR, RRR-->	
</description>

<!-- Available MSISDN -->
	<configuration>../subscriber_config.xml</configuration>

	<!-- Delete Message Store -->
	<subtest>../deleteMessageStoreAll.xml</subtest> 

		<!-- Start SMSC Server -->
	<function name="startSMSCServer" module="SMS"/>
	<function name="waitForBind" module="SMS"/>

	<!-- Query the name of the active MEDIA-STORE process -->
	<function name="activeProcessToVar" module="Remote">
		<parameter>MESSAGE-STORE</parameter>
		<parameter>Message_Store_Process_Name</parameter>
	</function>

	<!-- Set mandatory headers for request -->
	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Region</parameter>
		<parameter>Siberia</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Session-Id</parameter>
		<parameter>987655</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-MMS-Message-Type</parameter>
		<parameter>m-send-req</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>To</parameter>
		<configuration>MMSX/SECRET/RECIPIENT/MSISDN3</configuration>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Subscriber-MSISDN</parameter>
		<configuration>MMSX/SECRET/SENDER/MSISDN1</configuration>
	</function>

	<!-- Set subject with Express message symbol ! -->
	<function name="setHeader" module="HTTP">
		<parameter>Subject</parameter>
		<parameter>#MMS from secure HTTP with DR/RR Secret TC.025</parameter>
	</function>

	<!-- Send Metadeta Request -->
	<function name="sendGetRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/New-Message-Intercepted</parameter>
		</parameter>
	</function>

	<!-- Check response back from application -->
	<function name="checkResponseCode" module="HTTP">
		<parameter>200</parameter>
	</function>

	<!-- Will get response as New-Message-Intercepted-Response where need to validate X-Proxy-Handle as "send-body" and set X-Application-Context-Id as TransactionID -->
	<function name="queryText" module="BASIC">
		<variable>HTTP/HEADER/X-Application-Context-Id</variable>
		<parameter>TransactionID</parameter>
		<parameter>(.*)</parameter>
	</function>

	<function name="info" module="Basic">
		<parameter>TransactionID=</parameter>
		<variable>TransactionID</variable>
	</function>

	<function name="checkHeader" module="HTTP">
		<parameter>X-Proxy-Handle</parameter>
		<parameter>send-body</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Region</parameter>
		<parameter>Siberia</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Application-Context-Id</parameter>
		<variable>TransactionID</variable>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>Content-Length</parameter>
		<base64bytelength><file>mm7req.txt</file></base64bytelength>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>To</parameter>
		<configuration>MMSX/SECRET/RECIPIENT/MSISDN3</configuration>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Subscriber-MSISDN</parameter>
		<configuration>MMSX/SECRET/SENDER/MSISDN1</configuration>
	</function>

	<function name="setPostData" module="HTTP">
		<file>mm7req.txt</file>
		<parameter/>
	</function>

	<!-- Send Body to application-->
	<function name="sendPostRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/Message-Body</parameter>
		</parameter>
	</function>
<!-- Send Charge credit request -->

<!-- Check for response from Diameter server -->

	<!-- wait for 1 WSP sms message -->
	<function name="waitForWSPMessages" module="SMS">
		<parameter>1</parameter>
	</function> 
	

<function name="getServerConnection" module="SMPP">
         <parameter>MMSX</parameter>
		<parameter>0</parameter>
    </function> 

        <function name="sleep" module="basic">
            <parameter>12000</parameter>
        </function>

	<function name="sendSMPPPacket" module="SMPP">
		<parameter>MMSX</parameter>
		<parameter>SUBMIT_SM</parameter>
		<parameter>internal</parameter>
		<parameter>STYP</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<configuration>MMSX/SECRET/RECIPIENT/MSISDN3</configuration>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<configuration>MMSX/SHORTCODE/MSISDN1</configuration>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter></parameter>
		<parameter></parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>123456</parameter>
</function>

        <function name="sleep" module="basic">
            <parameter>6000</parameter>
        </function>

	<!-- Check for MMS message stored in Message Store-->
	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>
			<parameter>run command amocli -k count TI:F.CEE.</parameter>
			<variable>Message_Store_Process_Name</variable>
			<parameter>:AMO</parameter>
		</parameter>
	</function>

	<function name="queryResponse" module="Remote">
		<parameter>amocli: 1 items counted</parameter>
		<parameter>response</parameter>
	</function>

<!-- Need to check how to send DR/RR from recipient. -->

<!-- Stop SMSC Server -->
	<function name="stopSMSCServer" module="SMS"/>
	</test>