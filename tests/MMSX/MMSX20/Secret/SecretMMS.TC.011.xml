<test>
    <name>SecretMMS.TC.011</name>
    <description>Validate Application sends an SMS to Recipient if the password sent by the Recipient is incorrect / Validate SMS Message has a proper default Message and can be any language but Russian language support is must
Test Category: SHOULD
Test Steps:
---------------------------------------------------------------
Scenario #1:
1. Sender sends a secret MMS to the recipient 
2. Recipient sends the password to read the MMS
3. Validate the password sent by the recipient is incorrect.
4. Application sends an intimation SMS to the recipient for incorrect password.
5. Validate the SMS is delivered to recipient is in English language.
---------------------------------------------------------------
<!--  Modules Used:
	  1. HTTP
	  2. SMSC
	  3. Diameter
	  4. Remote
	  5. Basic
   	  TODO:-->	

	</description>
	<!-- Delete Message Store -->
	<subtest>../deleteMessageStoreAll.xml</subtest> 

	<!-- Available MSISDN -->
	<configuration>../subscriber_config.xml</configuration>

	<!-- Start SMSC Server -->
	<function name="startSMSCServer" module="SMS"/>
	<function name="waitForBind" module="SMS"/>

	<!-- Start MMSC Server -->
	<function name="startMMSCServer" module="MMSC"/>

	<!-- Query the name of the active MESSAGE-STORE process -->
	<function name="activeProcessToVar" module="Remote">
		<parameter>MESSAGE-STORE</parameter>
		<parameter>Message_Store_Process_Name</parameter>
	</function>

	<!-- Set mandatory headers for request -->
	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Region</parameter>
		<parameter>Siberia</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Session-Id</parameter>
		<parameter>988655</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-MMS-Message-Type</parameter>
		<parameter>m-send-req</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>To</parameter>
		<configuration>MMSX/SECRET/RECIPIENT/MSISDN3</configuration>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Subscriber-MSISDN</parameter>
		<configuration>MMSX/SECRET/SENDER/MSISDN1</configuration>
	</function>

	<!-- Set subject with Secret message symbol # -->
	<function name="setHeader" module="HTTP">
		<parameter>Subject</parameter>
		<parameter>#This is first end to end Secret TC.022</parameter>
	</function>

	<!-- Send Metadeta Request -->
	<function name="sendGetRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/New-Message-Intercepted</parameter>
		</parameter>
	</function>

	<!-- Check response back from application -->
	<function name="checkResponseCode" module="HTTP">
		<parameter>200</parameter>
	</function>

	<!-- Will get response as New-Message-Intercepted-Response where need to validate X-Proxy-Handle as "send-body" and set X-Application-Context-Id as TransactionID -->
	<function name="queryText" module="BASIC">
		<variable>HTTP/HEADER/X-Application-Context-Id</variable>
		<parameter>TransactionID</parameter>
		<parameter>(.*)</parameter>
	</function>

	<function name="info" module="Basic">
		<parameter>TransactionID=</parameter>
		<variable>TransactionID</variable>
	</function>

	<function name="checkHeader" module="HTTP">
		<parameter>X-Proxy-Handle</parameter>
		<parameter>send-body</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Region</parameter>
		<parameter>Siberia</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Application-Context-Id</parameter>
		<variable>TransactionID</variable>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>Content-Type</parameter>
		<parameter>text/xml; charset="utf-8"; boundary="NextPart_000_0028_01C19839.84698430"</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>To</parameter>
		<configuration>MMSX/SECRET/RECIPIENT/MSISDN3</configuration>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Subscriber-MSISDN</parameter>
		<configuration>MMSX/SECRET/SENDER/MSISDN1</configuration>
	</function>

	<function name="setPostData" module="HTTP">
		<file>mm7req.txt</file>
		<parameter/>
	</function>

	<!-- Send Body to application-->
	<function name="sendPostRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/Message-Body</parameter>
		</parameter>
	</function>
<!-- Send Charge credit request -->

<!-- Check for response from Diameter server -->

	<!-- wait for 1 WSP sms message -->
	<function name="waitForWSPMessages" module="SMS">
		<parameter>1</parameter>
	</function> 

<!-- Saving Server connection for future SMS communication -->
<function name="getServerConnection" module="SMPP">
         <parameter>MMSX</parameter>
		<parameter>0</parameter>
    </function> 

<!-- Building MO for sending Secret Password to MMSX from recipient -->
	<function name="sendSMPPPacket" module="SMPP">
		<parameter>MMSX</parameter>
		<parameter>DELIVER_SM</parameter>
		<parameter>internal</parameter>
		<parameter>1</parameter>
		<parameter>0</parameter>
		<parameter>1</parameter>
		<configuration>MMSX/SECRET/RECIPIENT/MSISDN3</configuration>
		<parameter>0</parameter>
		<parameter>1</parameter>
		<configuration>MMSX/SHORTCODE/MSISDN1</configuration>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter></parameter>
		<parameter></parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>0</parameter>
		<parameter>12323456</parameter>
	</function>

	<!-- wait for 1 WSP sms message -->
	<function name="waitForWSPMessages" module="SMS">
		<parameter>1</parameter>
	</function>

	<!-- Check for MMS message stored in Message Store-->
	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>
			<parameter>run command amocli -k count TI:F.CEE.</parameter>
			<variable>Message_Store_Process_Name</variable>
			<parameter>:AMO</parameter>
		</parameter>
	</function>

	<function name="queryResponse" module="Remote">
		<parameter>amocli: 1 items counted</parameter>
		<parameter>response</parameter>
	</function>

	<!-- Stop SMSC/MMSC Server -->
	<function name="stopSMSCServer" module="SMS"/>
	<function name="stopMMSCServer" module="MMSC"/>
</test>