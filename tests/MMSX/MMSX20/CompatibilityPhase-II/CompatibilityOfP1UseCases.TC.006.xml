<test>

    <name>CompatibilityOfP1UseCases.TC.006</name>
    <description>Validate "Auto responder" Feature in combination with "Nick" Feature 
Test Category: Should
Test Steps:
---------------------------------------------------------------
1. Add a nickname for sender(i.e. +412000000001) through Web Portal.
2. Sender of an MMS message activate "Auto responder" service through Web Portal .Add a phone number in MMS Auto Responder Configuration for a recipient.
3. Send MM1 request to MMS Proxy
4. MMS Proxy should intercept this message and send "New-Message-Intercepted" Request to Application as HTTP GET Request 
5. MMS Extra after validating the recipient sends a positive response and asks for "send data" to MMS Proxy server.
6. MMS Proxy then sends body with HTTP post request.
7. Sender and Recipient credit balace have been checked, if the sender and Recipient have balance then the request get forwarded.
8. Application gets a nickname(i.e. +412000000001 nickname is abc ) for that subscriber through its database.
9. From field for that sender gets updated to nickname(i.e. abc) .Then the auto response get forwarded.
10. MM7 submit has been sent with nickname via MM7-OUT to the recipient.
11. Application get a 200 ok response from the recipient.
12. Billing for sender for both Auto response and sending nickname in MMS .

---------------------------------------------------------------
<!--  Modules Used:
	  1. HTTP
	  2. Remote
	  3. Basic -->
</description> 
	<!-- Start MMSC server -->
	<function name="startMMSCServer" module="MMSC"/>

	 <function name="executeRemoteXMSCommand" module="Remote">
        <parameter>run command querier -y 1 -x 0 -o MMSX -p  F.CEE.DB-ACCESS -m com.mobilgw.intf.uds.mor.MmsxService.updateServiceAutoResponder subscriberId=55101  serviceEnabled=true serviceConditional=false defaultEnabled=true alreadySent=
        </parameter>
    </function>
 <function name="executeRemoteXMSCommand" module="Remote">
        <parameter>run command querier -y 1 -x 0 -o MMSX -p  F.CEE.DB-ACCESS -m com.mobilgw.intf.uds.mor.MmsxService.updateServiceNickname subscriberId=55101  serviceEnabled=true nickname=nickname2
        </parameter>
    </function>
	
    <function name="checkReturnCode" module="Remote">
		<parameter>0</parameter>
	</function>


	<!-- Delete Existing messages from Message Store -->
	<!-- <subtest>../deleteMessageStoreAll.xml</subtest> -->

	<!-- Available MSISDN -->
	<configuration>../subscriber_config.xml</configuration>

	<!-- Query the name of the active MESSAGE-STORE process -->
	<!-- <function name="activeProcessToVar" module="Remote">
		<parameter>MESSAGE-STORE</parameter>
		<parameter>Message_Store_Process_Name</parameter>
	</function> -->

	<!-- Set mandatory headers for request-->
	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Region</parameter>
		<parameter>Siberia</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Session-Id</parameter>
		<parameter>987654</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-MMS-Message-Type</parameter>
		<parameter>m-send-req</parameter>
	</function>

   <function name="setHeader" module="HTTP">
		<parameter>Content-Type</parameter>
		<parameter>text/xml; charset="utf-8"; boundary="NextPart_000_0028_01C19839.84698430"</parameter>
	</function>

	<!-- Set To field as recipient mobile number-->
	<function name="setHeader" module="HTTP">
		<parameter>To</parameter>
		<configuration>MMSX/AUTOREPLY/RECIPIENT/MSISDN1</configuration>
	</function>

	<!-- Set X-Proxy-Subscriber-MSISDN field as sender mobile number-->
	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Subscriber-MSISDN</parameter>
		<configuration>MMSX/AUTOREPLY/SENDER/MSISDN1</configuration>
	</function>

<!-- Set Subject in message for request -->
	<function name="setHeader" module="HTTP">
		<parameter>Subject</parameter>
		<parameter>Auto responder with nickname</parameter>
	</function>

	<!-- Send Metadeta Request to application-->
	<function name="sendGetRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/New-Message-Intercepted</parameter>
		</parameter>
	</function>

	<!-- Check response received from application -->
	<function name="checkResponseCode" module="HTTP">
		<parameter>200</parameter>
	</function>

	<!-- Will get response as a New-Message-Intercepted-Response where need to validate X-Proxy-Handle as "send-body" and set X-Application-Context-Id -->
	<function name="checkHeader" module="HTTP">
		<parameter>X-Proxy-Handle</parameter>
		<parameter>send-body</parameter>
	</function>

	<function name="queryText" module="BASIC">
		<variable>HTTP/HEADER/x-application-context-id</variable>
		<parameter>X-Application-Context-Id</parameter>
		<parameter>(.*)</parameter>
	</function>

	<function name="info" module="Basic">
		<parameter>X-Application-Context-Id=</parameter>
		<variable>X-Application-Context-Id</variable>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Application-Context-Id</parameter>
		<variable>X-Application-Context-Id</variable>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>Content-Type</parameter>
		<parameter>text/xml; charset="utf-8"; boundary="NextPart_000_0028_01C19839.84698430"</parameter>
	</function>

	<function name="setPostData" module="HTTP">
		<file>mm7req.txt</file>
		<parameter/>
	</function>

	<!-- Send Body to application -->
	<function name="sendPostRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/Message-Body</parameter>
		</parameter>
	</function>

	<!-- Validate "discard" response from Application to MMS proxy server -->
	<function name="checkHeader" module="HTTP">
		<parameter>X-Proxy-Handle</parameter>
		<parameter>discard</parameter>
	</function>

     <!-- Wait for a MM7 request on the MMSC Server -->
    <function name="waitForRequests" module="MMSC">
        <parameter>2</parameter>
    </function>

	<!-- It's a good Idea to check whether the response is actually a correct MM7 request by validating against the standards -->
	<function name="validateXML" module="XML">
		<variable>MMSCSERVER/MM7/SOAP</variable>
		<parameter></parameter>
		<configuration>MMSCSERVER/XMLNSENV</configuration>
		<configuration>MMSCSERVER/SOAPXSD</configuration>
		<configuration>MMSCSERVER/XMLNSMM7</configuration>
		<configuration>MMSCSERVER/MM7XSD</configuration>
	</function>

	<!-- check that the Sender Subject set correctly in SOAP response-->
	<function name="queryText" module="Basic">
		<variable>MMSCSERVER/MM7/SOAP</variable>
		<parameter>dev/null</parameter>
		<parameter>
		<parameter>&lt;Subject&gt;\{MMS:F</parameter>
		<configuration>MMSX/AUTOREPLY/SENDER/MSISDN1</configuration>
		<parameter>\}Auto responder with nickname&lt;/Subject&gt;</parameter>
		</parameter>
	</function>
	
	<!-- check MM7 version set correctly in response -->
	<function name="queryText" module="Basic">
		<variable>MMSCSERVER/MM7/SOAP</variable>
		<parameter>dev/null</parameter>
		<parameter>
			<parameter>&lt;MM7Version&gt;5.6.0&lt;/MM7Version&gt;</parameter>
		</parameter>
	</function>

<function name="setVariable" module="Basic">
			<parameter>test0</parameter>
            <variable>MMSCSERVER/6789/0/MM7/BODY/PLAIN</variable>
        </function>
	
	<function name="queryText" module="Basic">
		<variable>test0</variable>
		<parameter>mytest</parameter>
		<parameter>
		<parameter>&lt;To&gt;(.*)&lt;/To&gt;</parameter>
		</parameter>
	</function>

		<function name="queryText" module="Basic">
		<variable>mytest</variable>
		<parameter>dev/null</parameter>
		<parameter>
			<parameter>0591155001</parameter>
		</parameter>
	</function>

	<function name="queryText" module="Basic">
		<variable>test0</variable>
		<parameter>dev/null</parameter>
		<parameter>I am OOO, please contact me after 7 days.. ciao </parameter>
	</function>

<function name="setVariable" module="Basic">
			<parameter>test1</parameter>
            <variable>MMSCSERVER/6789/1/MM7/BODY/PLAIN</variable>
        </function>

	<function name="queryText" module="Basic">
		<variable>test1</variable>
		<parameter>mytest1</parameter>
		<parameter>
		<parameter>&lt;To&gt;(.*)&lt;/To&gt;</parameter>
		</parameter>
	</function>

		<function name="queryText" module="Basic">
		<variable>mytest1</variable>
		<parameter>dev/null</parameter>
		<parameter>
			<parameter>0591155101</parameter>
		</parameter>
	</function>

	


  	<!-- Stop MMSC Server -->
	<function name="stopMMSCServer" module="MMSC"/>
</test>