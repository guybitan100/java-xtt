<test>
    <name>CompatibilityOfP1UseCases.TC.007.xml</name>
    <description>Validate "Nick" Feature in combination with "Express" Feature 
Test Category: Should
Test Steps:
---------------------------------------------------------------
1. Sender sends MM1 message to MMS Proxy. 
2. MMS Proxy should intercept this message and send "New-Message-Intercepted" Request to Application as HTTP GET Request .
3. MMS Extra after validating the recipient and this MMS as express sends a positive response and asks for "send data" to MMS Proxy server.
4. MMS Proxy then sends body with HTTP post request.
5. Application sends the charging request to Billing application and gets the OK response. Express messages are not saved in the archive.
6. Application sends the MMS message to Recipient via PUSH-SMS-OUT process using WAP-push
7. Application also saves the MMS to "express" folder in message store.
8. Application sends the discard message to MMS proxy
9. MMS Proxy sends send.conf to the Sender

---------------------------------------------------------------
<!--  Modules Used:
	  1. HTTP
	  2. Remote
	  3. Basic -->
</description> 

	<!-- Start MMSC server -->
	<function name="startMMSCServer" module="MMSC"/>

	<!-- Start SMSC Server -->
	<function name="startSMSCServer" module="SMS"/>
	<function name="waitForBind" module="SMS"/>


	<!-- Delete Existing messages from Message Store -->
	<subtest>../deleteMessageStoreAll.xml</subtest>

	<function name="executeRemoteXMSCommand" module="Remote">
        <parameter>run command querier -y 1 -x 0 -o MMSX -p  F.CEE.DB-ACCESS -m com.mobilgw.intf.uds.mor.MmsxService.updateServiceArchive subscriberId=10001  serviceEnabled=true </parameter>
		    </function>

		<function name="executeRemoteXMSCommand" module="Remote">
			<parameter>run command querier -y 1 -x 0 -o MMSX -p  F.CEE.DB-ACCESS -m com.mobilgw.intf.uds.mor.MmsxService.updateServiceNickname subscriberId=10001  serviceEnabled=true nickname="nickname1"
			</parameter>
		</function>

	<!-- Available MSISDN -->
	<configuration>../subscriber_config.xml</configuration>

	<!-- Query the name of the active MESSAGE-STORE process -->
	<function name="activeProcessToVar" module="Remote">
		<parameter>MESSAGE-STORE</parameter>
		<parameter>Message_Store_Process_Name</parameter>
	</function>


	<!-- Set mandatory headers for request-->
	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Region</parameter>
		<parameter>Siberia</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Session-Id</parameter>
		<parameter>987654</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-MMS-Message-Type</parameter>
		<parameter>m-send-req</parameter>
	</function>

   <function name="setHeader" module="HTTP">
		<parameter>Content-Type</parameter>
		<parameter>text/xml; charset="utf-8"; boundary="NextPart_000_0028_01C19839.84698430"</parameter>
	</function>

	<!-- Set To field as recipient mobile number-->
	<function name="setHeader" module="HTTP">
		<parameter>To</parameter>
		<configuration>MMSX/COMP/RECIPIENT/MSISDN1</configuration>
	</function>

	<!-- Set X-Proxy-Subscriber-MSISDN field as sender mobile number-->
	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Subscriber-MSISDN</parameter>
		<configuration>MMSX/COMP/SENDER/MSISDN1</configuration>
	</function>

<!-- Set Subject in message for request -->
	<function name="setHeader" module="HTTP">
		<parameter>Subject</parameter>
		<parameter>!This is a express with nickename test message</parameter>
	</function>

	<!-- Send Metadeta Request to application-->
	<function name="sendGetRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/New-Message-Intercepted</parameter>
		</parameter>
	</function>

	<!-- Check response received from application -->
	<function name="checkResponseCode" module="HTTP">
		<parameter>200</parameter>
	</function>

	<!-- Will get response as a New-Message-Intercepted-Response where need to validate X-Proxy-Handle as "send-body" and set X-Application-Context-Id -->
	<function name="checkHeader" module="HTTP">
		<parameter>X-Proxy-Handle</parameter>
		<parameter>send-body</parameter>
	</function>

	<function name="queryText" module="BASIC">
		<variable>HTTP/HEADER/x-application-context-id</variable>
		<parameter>X-Application-Context-Id</parameter>
		<parameter>(.*)</parameter>
	</function>

	<function name="info" module="Basic">
		<parameter>X-Application-Context-Id=</parameter>
		<variable>X-Application-Context-Id</variable>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Application-Context-Id</parameter>
		<variable>X-Application-Context-Id</variable>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>Content-Type</parameter>
		<parameter>text/xml; charset="utf-8"; boundary="NextPart_000_0028_01C19839.84698430"</parameter>
	</function>

	<function name="setPostData" module="HTTP">
		<file>mm7req.txt</file>
		<parameter/>
	</function>

	<!-- Send Body to application -->
	<function name="sendPostRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/Message-Body</parameter>
		</parameter>
	</function>

	<!-- Validate "discard" response from Application to MMS proxy server -->
	<function name="checkHeader" module="HTTP">
		<parameter>X-Proxy-Handle</parameter>
		<parameter>discard</parameter>
	</function>
		
	 <!-- wait for 1 WSP sms message -->
	<function name="waitForWSPMessages" module="SMS">
		<parameter>1</parameter>
	</function> 

<!-- Check SMS Headers destination_addr -->
    <function name="compareString" module="Basic">
        <variable>
		<parameter>smsc/smpp/</parameter>
		<configuration>MMSX/COMP/RECIPIENT/MSISDN1</configuration>
		<parameter>/destination_addr</parameter>
		</variable>
        <configuration>MMSX/COMP/RECIPIENT/MSISDN1</configuration>
    </function>

<function name="queryText" module="Basic">
        <base64decode><variable>smsc/smpp/0991110201/MESSAGE_PAYLOAD</variable></base64decode>
        <parameter>MMS Extra: New message from 0991110001, click URL to display the message: </parameter>
		<parameter>.*</parameter>
</function> 

     <!-- Check for search MMS message stored in Message Store-->
	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>
			<parameter>run command amocli search TI:F.CEE.</parameter>
			<variable>Message_Store_Process_Name</variable>
			<parameter>:AMO</parameter>
		</parameter>
	</function>

<function name="queryResponse" module="Remote">
		<parameter>substituteOut=This is a express with nickename test message</parameter>
		<parameter>response</parameter>
	</function>

<!-- Validate Archive mesage is not -->
<function name="queryResponse" module="Remote">
		<parameter>senderAddress="nickname1</parameter>
		<parameter>response</parameter>
	</function>

	<!-- Validate Archive mesage is not -->
<function name="queryResponse" module="Remote">
		<parameter> messageIsExpress=true</parameter>
		<parameter>response</parameter>
	</function>


<!-- Check for No MMS message stored in Message Store-->
	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>
			<parameter>run command amocli -k count TI:F.CEE.</parameter>
			<variable>Message_Store_Process_Name</variable>
			<parameter>:AMO</parameter>
		</parameter>
	</function>

	<function name="queryResponse" module="Remote">
		<parameter>amocli: 1 items counted</parameter>
		<parameter>response</parameter>
	</function>

<!-- Stop SMSC Server -->
	<function name="stopSMSCServer" module="SMS"/>

  	<!-- Stop MMSC Server -->
	<function name="stopMMSCServer" module="MMSC"/>
</test>