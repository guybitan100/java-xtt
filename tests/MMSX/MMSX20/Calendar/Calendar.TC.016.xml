<test>

	<name>Calendar.TC.016</name>
    <description>Validate Calendar MMS Use Case / Via non-secure HTTP-IN Application receives MM1 Message with "application/vnd.wap.multipart.related" Content-Type (200 Kbytes) (mms.smil + text/plain + images + sounds + videos in multiple slides) / Application sends MM on that specified date
Test Category: MUST
Test Steps:
---------------------------------------------------------------
1. Login to the MMS Extra Management portal the sender specifies a future date in the subject of MMS.
2. Send MM1 Message to MMS Proxy
3. MMS Proxy should intercept this message and send "New-Message-Intercepted" Request to Application as HTTP GET Request and Content-Type should be set as 1 Kbyte
3. MMS Extra after validating the user and recipient sends a positive response and asks for "send data" to MMS Proxy server.
4. MMS Proxy then sends HTTP post with having body of 200 Kbytes data and MIME multipart/related as mms.smil + text/plain + images + sounds + videos in multiple slides included in message
5. The application now saves the MMS in the persistent storage setting up a timer up to the desired time requested by the sender for the MMS delivery.
6. Sender credit balance has been checked, if the sender has balance then the Billing for that sender happens.
7. MM7 submit has been sent via MM7-OUT to the target recipient.
8. Application gets a 200 ok response.
---------------------------------------------------------------
<!--  Modules Used:
	  1. HTTP
	  2. Remote
	  3. Basic -->
</description> 

	<!-- Start MMSC server -->
	<function name="startMMSCServer" module="MMSC"/>

	<!-- Available MSISDN -->
	<configuration>../subscriber_config.xml</configuration>

	<!-- Delete Message Store -->
	<subtest>../deleteMessageStoreAll.xml</subtest>

	<!-- Query the name of the active MESSAGE-STORE process -->
	<function name="activeProcessToVar" module="Remote">
		<parameter>MESSAGE-STORE</parameter>
		<parameter>Message_Store_Process_Name</parameter>
	</function>

	<!-- Set mandatory headers -->
	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Region</parameter>
		<parameter>Siberia</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Session-Id</parameter>
		<parameter>987654</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-MMS-Message-Type</parameter>
		<parameter>m-send-req</parameter>
	</function>

	<!-- Set To field as recipient mobile number-->
	<function name="setHeader" module="HTTP">
		<parameter>To</parameter>
		<configuration>MMSX/NOTINDB/RECIPIENT/MSISDN1</configuration>
	</function>

	<!-- Set X-Proxy-Subscriber-MSISDN field as sender mobile number-->
	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Subscriber-MSISDN</parameter>
		<configuration>MMSX/CALENDAR/SENDER/MSISDN1</configuration>
	</function>

	<function name="createDateString" module="Basic">
        <parameter>kk':'mm' 'dd'.'MM'.'yy</parameter>
        <parameter>date</parameter>
        <parameter>120</parameter>
        <parameter>UTC</parameter>
    </function>

    <function name="info" module="Basic">
        <parameter>
            <parameter>Date in Subject is : </parameter><variable>date</variable>
        </parameter>
    </function>

	<!-- Set Subject in message for request -->
	<function name="setHeader" module="HTTP">
		<parameter>Subject</parameter>
		<parameter>
            <parameter>T&lt;</parameter>
            <variable>date</variable>
            <parameter>&gt; Happy Birthday</parameter>
        </parameter>
	</function>

	<!-- Send Metadeta  Request to application-->
	<function name="sendGetRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/New-Message-Intercepted</parameter>
		</parameter>
	</function>

	<!-- Check response received from application -->
	<function name="checkResponseCode" module="HTTP">
		<parameter>200</parameter>
	</function>

	<!-- Will get response as New-Message-Intercepted-Response where need to validate X-Proxy-Handle as "send-body" and set X-Proxy-Transaction-Id as TransactionID -->
	<function name="checkHeader" module="HTTP">
		<parameter>X-Proxy-Handle</parameter>
		<parameter>send-body</parameter>
	</function>

	<function name="queryText" module="BASIC">
		<variable>HTTP/HEADER/X-Application-Context-Id</variable>
		<parameter>X-Application-Context-Id</parameter>
		<parameter>(.*)</parameter>
	</function>

	<function name="info" module="Basic">
		<parameter>X-Application-Context-Id=</parameter>
		<variable>X-Application-Context-Id</variable>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Proxy-Region</parameter>
		<parameter>Siberia</parameter>
	</function>

	<function name="setHeader" module="HTTP">
		<parameter>X-Application-Context-Id</parameter>
		<variable>X-Application-Context-Id</variable>
	</function>

	<!-- Set FileName for the 1st Part of Create-MultiPart-Mixed-File -->
	<function name="setVariable" module="Basic">
		<parameter>file1</parameter>
		<parameter>sampletext1.bin</parameter>
	</function>

	<!-- Set FileType for the 1st Part of Create-MultiPart-Mixed-File -->
	<function name="setVariable" module="Basic">
		<parameter>type1</parameter>
		<parameter>plain/text</parameter>
	</function>

	<!-- Set FileName for the 2nd Part of Create-MultiPart-Mixed-File -->
	 <function name="setVariable" module="Basic">
		<parameter>file2</parameter>
		<parameter>image001.jpg</parameter>
	</function>

	<!-- Set FileType for the 2nd Part of Create-MultiPart-Mixed-File -->
	<function name="setVariable" module="Basic">
		<parameter>type2</parameter>
		<parameter>image/jpeg</parameter>
	</function>

	<!-- Set FileName for the 3rd Part of Create-MultiPart-Mixed-File -->
	 <function name="setVariable" module="Basic">
		<parameter>file3</parameter>
		<parameter>sound.mp3</parameter>
	</function>

	<!-- Set FileType for the 3rd Part of Create-MultiPart-Mixed-File -->
	<function name="setVariable" module="Basic">
		<parameter>type3</parameter>
		<parameter>audio/mpeg</parameter>
	</function>

	<!-- Set FileName for the 4th Part of Create-MultiPart-Mixed-File -->
	 <function name="setVariable" module="Basic">
		<parameter>file4</parameter>
		<parameter>sample.flv</parameter>
	</function>

	<!-- Set FileType for the 4th Part of Create-MultiPart-Mixed-File -->
	<function name="setVariable" module="Basic">
		<parameter>type4</parameter>
		<parameter>video/flv</parameter>
	</function>

	<!-- Set charset for the Create-base64-File -->
	<function name="setVariable" module="Basic">
		<parameter>char</parameter>
		<parameter>us-ascii</parameter>
	</function>

	<!-- Set Headers for Send Body request -->
	<function name="setVariableLines" module="Basic">
		<parameter>2</parameter>
		<parameter>headers</parameter>
		<parameter>To: </parameter>                     <configuration>MMSX/NOTINDB/RECIPIENT/MSISDN1</configuration>
		<parameter>X-Proxy-Subscriber-MSISDN: </parameter>                   <configuration>MMSX/CALENDAR/SENDER/MSISDN1</configuration>
		<parameter>X-Mms-Message-Type: </parameter>     <parameter>m-send-req</parameter>
		<parameter>X-Application-Context-Id: </parameter>   <variable>X-Application-Context-Id</variable>
		<parameter>Content-Type: </parameter>           <parameter>multipart/related; boundary="----=_Part_1_31161848.1109320473531"</parameter>
	</function>

	<!-- Call Subtest to Create Multipart File -->
	<subtest>Create-MultiPart-File-Related2.xml</subtest>

	<function name="setPostData" module="HTTP">
		<file>send-multipart-related.bin</file>
		<parameter/>
	</function>

	<!-- Send Body to application -->
	<function name="sendPostRequest" module="HTTP">
		<parameter>
			<parameter>http://</parameter>
			<configuration>MMS_Extra/IP</configuration>
			<parameter>:</parameter>
			<configuration>MMS_Extra/PORT</configuration>
			<parameter>/Message-Body</parameter>
		</parameter>
	</function>

	<!-- Validate "discard" response from Application to MMS proxy server -->
	<function name="checkHeader" module="HTTP">
		<parameter>X-Proxy-Handle</parameter>
		<parameter>discard</parameter>
	</function>

	<!-- Should not receive messages within 1 min-->
    <function name="waitForTimeoutRequests" module="MMSC">
        <parameter>118000</parameter>
    </function>

	<!-- Wait for a MM7 request on the MMSC Server -->
	<function name="waitForRequests" module="MMSC">
		<parameter>1</parameter>
	</function>

	<!-- It's a good Idea to check whether the response is actually a correct MM7 request by validating against the standards -->
	<function name="validateXML" module="XML">
		<variable>MMSCSERVER/MM7/SOAP</variable>
		<parameter></parameter>
		<configuration>MMSCSERVER/XMLNSENV</configuration>
		<configuration>MMSCSERVER/SOAPXSD</configuration>
		<configuration>MMSCSERVER/XMLNSMM7</configuration>
		<configuration>MMSCSERVER/MM7XSD</configuration>
	</function>

	<!-- check MM7 version set correctly in response -->
	<function name="queryText" module="Basic">
		<variable>MMSCSERVER/MM7/SOAP</variable>
		<parameter>dev/null</parameter>
		<parameter>
			<parameter>&lt;MM7Version&gt;5.6.0&lt;/MM7Version&gt;</parameter>
		</parameter>
	</function>

	<!-- Check for No MMS message stored in Message Store-->
	<function name="executeRemoteXMSCommand" module="Remote">
		<parameter>
			<parameter>run command amocli -k count TI:F.CEE.</parameter>
			<variable>Message_Store_Process_Name</variable>
			<parameter>:AMO</parameter>
		</parameter>
	</function>

	<function name="queryResponse" module="Remote">
		<parameter>amocli: 0 items counted</parameter>
		<parameter>response</parameter>
	</function>

	<!-- Stop MMSC Server -->
	<function name="stopMMSCServer" module="MMSC"/>

</test>
